孔径比与冲击距对冲击/发散冷却隔热屏冷却性能影响
为了获得孔径比与冲击距对冲击/发散冷却层板隔热屏冷却性能的影响,采用商用软件Fluent,基于加力燃烧室隔热屏的工况条件,对7组不同孔径比和7组不同相对冲击距的冲击/发散层板模型进行了三维流固耦合传热数值模拟研究,得到了层板隔热屏内部被冲击表面的Nu数、层板隔热屏气膜冷却表面的冷却效果、层板隔热屏的冷气消耗和冷流体热负荷的变化规律,其对层板隔热屏的设计具有参考价值。结果表明,Nu数与冷却效果均随着孔径比的增大而增大,随着冲击距的增大而减小。其中随孔径比增大,平均冷却效果值最大增大40.5%,随冲击距增大,平均冷却效果值最大减小3.27%。

冲击/发散冷却 气膜冷却 隔热屏 加力燃烧室 数值仿真  

051“肉
医疗监护是现代医学中疾病诊断的重要依据。
传统医疗监护设备仅能在医院使用,限制了患者和
医护人员的活动范围,增加了悦者的负担和风险。
随着计算机和网络通信技术的进步,近年来远程医
疗监护迅速发展。通过网络连接监护设备和医疗中
心,用户可随时随地得到监护中心的监护,在出现索
急情况时及时发现并获得救治。
研究现状表明“,当前大部分远程医疗信息系
统采用的是浏览器/服务器(B/S)架构,优点是部署
方便且维护成本低等。但是,其中超文本传输协议
(HTTP)采用了请求/响应工作模式的无状态单向
协议,服务器端无法主动向浏览器端发送更新数据。
传统B/S技术采用定时刷新或轮询方式,在一定程
度上达到信息的实时更新,实际运行时会生成大量
不必要的流量。随着应用规模的扩大,将造成网络
拥塞,服务器资源占用率高等问题。远程医疗监护
需要连续、实时以及长时间地监测患者的体征参数,
而且医疗监护数据具有数据量大和更新频率高等特
点,传统B/S技术难以满足医疗监护数据订阅分发
和实时推送的要求。本文则基于消息中间件独立地
实现数据的发布和订阅服务,在此基础上,引人
WebSocket协议,建立浏览器端和服务器端间的全
双工通借,实现医疗数据的实时传输和显示。以期
实现准确的订阅分发以及高效的实时推送,满足远
程医疗监护性能要求。
1基于消息中间件的远程医疗监护体系
远程医疗监护中,监护对象通常佩戴便携式监
护设备采集医疗体征数据,监护设备通过无线或蓝
牙网络与网关通信。网关可部署于居民家、社区卫
生院或流动服务车内,通过第三代移动通信网或固
网向医疗信息系统上传接收到的数据,经授权医生
或患者家人可通过Web查看监护对象的医疗体征
数据。
基于消息中间件的远程医疗监护体系采用Ja-
va平台环境(J2EE)的分层结构,包括应用层、应用
支撑层和设备层,总体框架如图1所示。
Web访问人口,业务逻辑提供应用服务相关接口
实现;
2)应用支撑层:包括消息分发、消息订阅、网络
接人以及数据访问服务。其中,消息订阅服务接受
上层应用的订阅请求,并管理订阅关系;消息分发服
务进行数据解析和消息转换,并按照订阅关系进行
分发;网络接人服务提供网络通信和接人控制,接受
和处理设备层的连接;数据访问服务提供数据库的
访问接口,并读写各类数据;
3)设备层:包括医疗监护仪器以及测量设备
等,可实时采集医疗体征数据,通过有线或无线网络
与应用支撑层的网络接人服务连接,并上传和下载
数据。
消息中间件是上层应用和设备层通信的中介,
终端设备作为消息发布者,信息显示终端作为消息
消费者,通过消息中间件实现数据的订阅分发,能够
减少网络流量,提高动态数据传输效率。同时,发布
者和订阅者都无需了解对方的位置和状态,为应用
系统提供一种松耦合的通信方式(。
2“消息中间件在远程医疗监护中的实现
消息中间件产品众多,为了统一标准,Java标
准组织制定和发布了Java消息服务(JMS)IMS
不负责消息中间件的实现,只定义了消息中间件系
统的服务和接口,是事实上的消息中间件标准“0。
基于JMS的消息中间件种类繁多,不同的消息中间
件产品因重量级上的差异造成消息传输过程中的性
能迥异。ActiveMQ是Java语言编写的开源消息中
间件,完整实现了JMS1.1和J2EE1.4中JMS服
务,具备集群,存储转发以及持久化等特性。与其他
同重量级的消息中间件相比,ActiveMQ具备更高
的消息传输效率““,满足远程医疗监护中消息传递
的高实时性和大数据吞吐量的要求。因此,本文基
于ActiveMQ完成了消息中间件在远程医疗监护中
的应用实现,借助Spring框架,实琨了消息的定义、发
送\接收、解析.实时推送以及主题订阅管理等功能。
2.1“实现框架
远程医疗监护中,基于ActiveMQ消息中间件
的实现框架如图2所示。ActiveMQ向下接收和解
析接人层发送的数据,向上接收订阅和退订消息,维
护订阅关系,并将数据转发给相应订阅者。
Spring提供的jmsTemplate类实现了JMS中消息
代理(messagebroker)收发消息的标准接口,隐藏
了JMS创建连接和创建会话等通用流程。使用
jmsTemplate类只需实现定义的回调接口,无需关
心如何创建、访问或清除JMS资源,简化了开发流
程。Spring框架下集成ActiveMQ的配置如下:
1)在Spring的配置文件中定义连接池(con-
nectionFactory),用于创建与ActiveMQ的连接,具
体为:`
<bean 迈 二 “ connectionFactory“ class =" org. apache,
activemq. ActiveMQConnectionFactory“ >
<property name = "brokerURL" value= "tcp://local-
host: 61616" />
</bean>
配置文件表明,ActiveMQ服务的统一资源定
位符(URL)是本机的61616端口。
' 2) 将 该 connectionFactory 注 人 jmsTemplate
类,这样jmsTemplate连接的消息代理就设置成
ActiveMQ, BEAK Fy,
<bean id = "jmsTemplate" class =" org. springframe-
work. jms. core. JmsTemplate“ >
一 property name =" connectionFactory" ref =" connec-
tionFactory" /> .
</bean>
2.2 HEEB
消息是交换数据的载体,由消息头和消息体组
成。其中,消息头是消息传递时的必要信息,包括消
息ID、消息标志以及消息类型等。消息体保存了消
息内容。远程医疗监护应用中消息的定义如表1所
示。消息可进一步根据消息头中的消息标志(msg-
Flag)分为指令类和数据类两种类型消息。指令类
消息分为订阅、退订和清空订阅等;数据类消息封装
了用于信息交换的实际数据。对于医疗数据,消息
头消息类型(msgType)进一步区分不同的医疗数据
类型,包括血糖、血压和心电等数据。Spring提供
messageCreator接口,对消息进行封装,通过实现该
接口完成消息定义,ijimsTemplate类回调该接口中
的messageCreate方法创建发送的消息。
2.3通信模型
ActiveMQ提供了点对点和订阅分发两种通信
模型。前者在端点间建立了虚拟链路将消息从源地
裘1消息定义
组成内A
.消息ID(msgID),消息标志(msgFlag),消息类型(msg-
Type),消息发布时间(msgPublishTime),消息发布者
消息头(msgPublishier),消息接收者(msgReceiver),消息生存
期(CmsgExpiry),回执标志(returnFlag),是否永久保存
(persistence) , 消 息 长 度 (msgLength) ?++ ?+
消息体“消息内容(msgData)
址发送到目的地址,生产者向ActiveMQ的消息队
列发送消息并存放于队列中,消费者从队列中提取
消息,队列中的1条消息只能由1个消费者接收;后
者无需建立端到端的链路,生产者根据主题将消息
发送到ActiveMQ的不同队列,由ActiveMQfA5
将队列中消息发送给对应的主题订阅者,发布到
1个主题的消息可由多个订阅者接收“1“。发布/订
阅模型是一个基于推送的模型。采用该模型,消息
可自动向消费者广播,滢足远程医疗监护,同一监护
对象的医疗数据可满足多个监护人员订阅的应用需
求。在Spring配置文件中将jmsTemplate配置为
发布/订阅通信模型,具体为:
一 bean id = "jmsTemplate" class 一 “org. springframe-
work. jms. core, JmsTemplate" >
<property name="pubSubDomain" value="true" />
</bean>
远程医疗监护中,主题由userID和medType
组成,表达了医疗监护人员指定查看某个监护对象
的某种类型医疗数据的语义。
配置文件中,将ActiveMQ消息目的地设置为
主题队列,具体为:,
<bean id 一 “destinationOfTopic“class 一 “org. apache.
activemq. command. ActiveMQTopic" >
一 constructor-arg index="0" value="]JMSTopic" />
</bean>
2.4“消息发布与接收
2.4.1“消息发布
远程医疗监护中,指令类消息发布频率和数据
量较小,本文重点闸述医疗数据的发布。接人层接
收到网关上传的医疗数据是按照卫生信息交换标准
(HL7)或标准心电数据交换华议(SCP-ECG)标准
编码的数据包,其中包含该数据采集对象的userID
和medType等信息。接人层首先解码数据包,获取
userID和medType,由该信息构造主题(Topic),然
后将数据包转换成消息,发送到消息中间件相应的
主题队列。
2.4.2“消息接收'
JMS消息传递方式包挠同步和异步两种模式。
同步模式中,所有消息的发送或接收均在同一线程
中阻塞式进行;异步模式中,每条消息的接收或发送
可非阻塞地在独立线程中运行。对于模块,在某时
刻可作为消息生产者,在另一时刻又可作为消息消
费者,甚至同时担任两个角色。为了同时保证高吞
吐率和全双工通信,应选择异步消息传递模式。异
步通信中,需要为每个消费者注册1个消息监听命
容器,负责消息接收。监听器容器接收到1条消息
后,在自身线程池中获取1个空闲状态的消息监听
器并触发该监听器的消息接收事件,由消息监听器
调用自身的onMessage方法进行消息解析。通过
重载onMessage方法,解析接收的消息对象。如果
是数据类消息,将消息体中的数据保存到数据库,同
时按照订阅关系向上层应用分发;如果是指令类消
息,通知相应组件执行操作。
2.5“消息实时推送
为了保证远程医疗监护的实时性,消息中间件
接收到的医疗数据需要实时推送到用户浏览器端显
示。传统的基于Web的实时通信包括定时轮询
(Polling)和长轮询(LongPolling)。上述两种方式
均用Ajax技术模拟实时交互“1。客户端以频繁请
求方式保持和服务器端的数据同步,每次交互都是
一次完整的HTTP请求和应答过程,数据冗余大,
当数据更新频繁时,对服务器端性能影响较大。另
外 , 基 于 Adobe Flash Player BJ Socket 通 信 , 可 以
模拟实时通信“,前提是浏览器需安装FlashPlayer
相关组件,且要求打开服务器端的843端口,供
Flash组件检索包含域授权的安全策略文件。
WebSocket协议是HTML5中新增的一种通
信协议,能够在浏览器和服务器间建立全双工通信,
其这接建立过程如图3所示。服务器接收到浏览器
发出的连接请求,从HTTP报文中识别出Web-
Socket请求,创建1个WebSocket连接,并向浏览
器端返回应答信息,提手成功后进人双向长连接的
数据传输阶段,浏览器端和服务器端可以全双工模
式发送和接收数据,直至任一方主动关闭该连接或
连接空闲时间超时。
图 3 WebSocket连接建立过程
Ajax轮询和WebSocket通信耗时对比如图4
所示,假设服务端和浏览器端交换1次数据耗时
50ms。由图4可知,在Ajax轮询通信方式下,浏
览器向服务器发送请求需耗时50ms,服务器返回
响应数据需50ms,浏览器和服务器的通信以一定
的时间周期重复上述过程。在WebSocket通信模
式下,连接只需建立1次,通信协议由HTTP转换
为WebSocket协议,并保持长连接。当有数据到达
服务器端时自动向浏览器端推送,无需浏览器端每
次都发送请求。因此,在数据量较大的情况下,基于
WebSocket协议的实时通信具有性能优势““1,采用
该协议实现医疗数据的实时推送。
延迟,在消息中间件容器中运行WebSocket的服务
端,建立单独线程接收来自浏览器端的WebSocket
连接请求。Web页面加载的同时创建WebSocket
对象,并请求与服务器端建立连接。浏览器端由
JavaScript语言实现,关键代码如下:
var ws = new WebSocket (「 ws: // 127. 0. 0. 1: 8090/
WebSocket? userID= User0001& medType=ECG');
尕请求建立WebSocket连接
ws. onopen 一 function() {+} 人 建 立 连 接
ws. onmessage = function(msg) {
从接收数据并处理`
} -
ws.send();人向服务端发送数据
ws. close(); 从 关 闭 WebSocket 连 接
其 中 ,ws: 仁 127.0.0.1: 8090/WebSocket 表 示
WebSocket连接请求的URL地址,userID和med-
Type表示该长连接订阗的主题,消息中间件的服务
端通过解析上述两个参数将对应主题队列的消息转
发给该连接。
2.6订阅管理.|
,订阅管理维护订阅关系列表,保存用户的主题
订阅关系,并提供订阅关系的查询、增加和删除功
能。以一Key,Value一格式构造订阅关系列表,其
中Key为订阅主题,Value为发起订阅的用户对象。
如图5所示,医护人员A和医护人员B同时订阅了
用户User0001的心电数据,医护人员C和D分别
订阅了用户Useroo01的血压数据以及用户Us-
er0002的心电数据。图6给出了订阅管理模块处
理订阅和退订消息的流程.
3.1试验设计
为了验证本文方案的可行性,本文采用Java语
言实现原型系统的服务器端,结合动态网页技术
(JSP)实现前端页面。试验从2方面考察原型系统
的功能和性能:1)医疗数据是否可准确无误地分发
到指定的订阅者;2)基于消息中间件实现的原型系
统收发医疗数据的实时性能。测试环境:计算机硬
件配置为双核处理器3.4GHz,内存4GB,操作系
统为WindowsServer2003。Web,消息中间件以及
数据库服务器分别部署于不同计算机,网络为本地
局域网。试验内容包括:
1)订阅分发测试:创建测试用户,上传多类型
医疗数据,同时在监护端订阅该用户各类型医疗数
据,统计数据收发情况;
2)实时性能测试:与未引人消息中间件,基于
传统控制协议(TCP)通信方式对比,记录医疗数据
从发送到接收所需时间,分析原型系统的医疗数据
订阅分发的性能;未采用Websocket协议,与基于
Ajax轮询通信方式相比,分析原型系统医疗数据实
时推送的性能。
3.2“结果分析
1)订阅分发测试结果
开启医疗监护设备,上传测试用户的各类医疗
数据,同时,在监护端发起对测试用户医疗数据的订
阅,订阅关系如图7所示。在消息的发送端和浏览
器端,对30min内消息的收发数量进行统计,试验
结果如表2所示。试验结果表明,由于订阅者1同
时订阅了发布者1和2的医疗数据,因此可接收二
者发布的全部医疗数据;订阅者2,3和4分别只订
阅了发布者1,2和3的医疗数据,因此只能收到相
应的订阅数据。由此判定,经过消息中间件的订阅分
发以及Websocket服务端的匹配推送,在多对多的订
阅关系下,消息能够准确地传递到相应的订阅者。
表 2 医疗数据收发数量
发布消息接收消息
发布者1发布者2发布者3订阅者1订阅者2订阅者3订阅者4
11024 10347 6874 21371 11024 10347 6 874
2)实时性能测试结果
为了测试本文所述基于消息中间件的远程医疗
监护框架的实时性能,构建了2个对比参照系统。
参照系统1不使用消息中间件作为中间层,而是采
用Java的Socket技术,在网络接人服务与上层应
用间建立TCP直联通信,其他组件实现方式与原型
系统相同;参照系统2不使用WebSocket协议,在
服务器端和浏览器端通过Ajax轮询通信方式交换
数据,其他组件实现方式与原型系统相同。
在相同的数据和网络环境下分时段运行原型系
统和参照系统1,记录每个医疗数据从网关发送到
WebSocket服务端接收完成耗费的时间,作为实时
性能的评价标准。心电数据包包含多导联的心电波
形,数据量较大而且实时性要求更强,因此将心电数
据作为试验数据。该试验的心电监护设备的采样频
率为5ms,RET个导联的心电数据,1个心电数
据包封装成jms消息后约为450B.
模拟用户并发量保持50,100和200,系统平稳
运行时,随机选择1000个心电数据包的分发时间。
在低并发情况下,原型系统和参照系统1的数据分
发时间差距不大,随着并发数的增加,原型系统的数
据分发时间依然保持在60ms左右,而未使用消息
中间件的参照系统1分发数据的时间增长明显。模
拟用户并发量为200的试验结果如图8所示。试验
结果表明,随着用户并发量的增加,引人消息中间件
对消息分发的实时性有较大提高。
的实时性,Ajax轮询的时间周期不能设置过长。同
时,为了减少服务端运行负担,转询时间周期不易设
置太短。因此,应设置适当的轮询时间周期,并兼顾
数据更新运行效率和实时性。在低并发情况下,参
照系统2能够按照轮询频率获取更新数据。但是,
当模拟用户并发量达到100时,服务器CPU的使用
率超过90%,难以及时响应请求,浏览器端的数据
更新出现较大延迟。当模拟用户并发量达到150
时,已经超过服务器的最大负载能力,出现异常。原
型系统在虚拟用户并发量保持在200时,仍能够实
现了医疗数据高实时性的更新和显示。
4“结束语
远程医疗监护是确保医护人员快速、高效地进
行健康状况监护的重要手段,也是未来个人医疗服
务的发展趋势。本文介绍了基于消息中间件的远程
医疗监护的实琴方案,并利用Java语言实现了原型
系统。通过引人消息中间件,利用消息传递机制实
现医疗数据的订阅分发,提高了数据传输的可靠性
和准确性,同时降低了系统的耦合性。利用Web-
Socket协议在测览器端和服务器端间建立全双工
通信连接,实现了医疗数据的实时推送。后续工作
将研究ActiveMQ的集群等高级企业特性,以提高
消息传输的可扩展性和稳定性。
参 考 文 献 (References ) ,
[L1] Kumar S, Kambhatla K , Hu F,et al. Ubiquitous com-
puting for remote cardiac patient monitoring; a survey
[J/OL]. (2008-04-22) [ 2013-04-15]. http: 人 www.
hindawi. com/journals/ijta/2008/459185/.
(2]杨勇,彭承琳.国外远程医疗的发展近况[JJ.医疗卫
生 装 备 , 2005,26(1) :19-20,
Yang Yong, Peng Chenglin. Recent foreign researches
on telemedicine[ J]. Chinese Medical Equipment Jour-
nal,2005,26(1):19-20, (in Chinese)
[3]宋加强,龚维强.空管系统中面向消息中间件技术的
设计与实现[Jj.指挥信息系统与技术,2010,1(5):24-
27.
Song Jiagiang, Gong Weiqiang.Design and implemen-
tation of message-oriented middleware in air traffic
control systems [J]. Command Information System
and Technology, 2010,1(5) :24-27、(in Chinese)
[4]王传胜,李乔儒.基于IMS的消息服务的研究与开发
LJJ. 计 算 机 工 程 与 设 计 ,2005,26(12) :3423-3426.
Wang Chuansheng, Li Qiaoru,Research and develop-
ment of message service based on JMS [J]. Computer
Engineering and Design, 2005,26(12) :3423-3426.《in
Chinese)
[5]戴俊,朱晓民.ETActiveMQ的异步消息总线的设计
与实现[JJ.计算机系统应用,2010,19(8):254-257.
Dai Jun, Zhu Xiaomin, Design and implementation of
an asynchronous message bus based on ActiveMQ[J].
257. (in Chinese)
(6]马建刚,黄涛,汪锦岭,等.面向大规模分布式计算发
布订阅系统核心技术[J].软件学报,2006,17(1):134-
147.
Ma Jiangang, Huang Tao, Wang Jinling, et al. Un-
derlying techniques for large-scale distributed compu-
ting oriented publish/subscribe system[J]. Journal of
Software,2006,17(1):134-147, (in Chinese)
[7]王鹏,吴晓东,杨华民.基于不同数据传输格式对Ajax
实时性响应的研究[JJ.长春理工大学学报:自然科学
版 , 2011,34(2) :146-149.
(下转第62页)
