面向空间应用的时间触发以太网
将时间触发协议增加到采用星型拓扑结构的以太网业务上，且保持完全兼容IEEE802．3标准，可解决空间有效载荷使用标准以太网通信遇到的实时性、确定性和可靠性问题。时间触发以太网基于全局基准时间，实时数据传输遵循严格的时序，支持时间和事件触发的两种通信过程。时间触发通道适合同步或周期性实时消息的传输，而事件触发通道适用于偶发或非周期性消息的传输。设计了空间应用以太网的拓扑结构和协议栈，介绍了系统通信的过程，进行了时间触发协议的研究，并对同步性能和网络性能进行了仿真验证。该以太网在保证可靠性、安全性的同时，增强了网络的灵活性，提高了网络利用率。

时间触发 以太网 空间应用 实时性 确定性  

美国航空航天局已着手将以太网推广到航天
计划中,正在制定空间以太网的标准,猎户座飞船
已经采用了确定性的时间触发以太网作为其通信
主干网。而空间数据系统咨询委员会(Consultative
Committee for Space Data Systems ,CCSDS) 的 航 天
器在轨接口业务体系结构中也已将以太网作为其
数据链路层的一种接口。尽管以太网由于其良好
的传输特性一直受到国际、国内航天应用界的关
注,但将普通以太网应用到空间安全关键系统中,
肯定会有饭陷。
1“普通以太网空间应用的缺陷
1)实时性:普通以太网采用载波监听多路访
问/冲突检测机制来解决通信介质层的接人,该机
deterministic
制会引起通信冲突并导致重发。这种重发机制在
网络受到干扰时更为严重,因而不具备强的实
时性。
2)确定性:普通以太网在网络负荷较大时的
重发机制增加了网络通信的不确定性。而对于基
于交换机的全双工以太网来说,是将报文缓存成
队列然后分别转发,那么队列头和尾的发送时间
就有差距,对于要求及时响应的通信会带来非常
大的不确定性。
3)可靠性:普通以太网的可靠性依赖于网络
节点的可靠、交换机或路由器的性能和传输媒介
的稳定,侄并未考虑在节点、交换设备以及媒介产
生故障之后的网络性能保证问题。针对在空间应
用 中 的 使 用 , TCP/IP 协 议 ( Transmission Control
Protocol/Internet Protocol ) 5) =H 1& N PK =] Fn ji] Hy i]
制不完全适用于安全关键系统,而UDP协议
(UserDatagramProtocol)又属于不可靠的面向无
达接的协议。
2“空间应用以太网的特性需求
2.1“实时性需求
实时性是指通信链路上的数据包和控制数据
能在指定的时间延迟级别以下被响应,在不同的
场合需要达到nsPops级。空间有效载荷的通
信实时性一般在100us缄可以满足任务需求。
2.2“确定性需求
确定性是指在最大的时间延迟保证上,确保
控制消息的准确到达和载荷数据所需的带宽,其
实质是适应当前应用要求的每一次通信运行均具
备可顽测性和一贯性。常用的Spacewire总线、
AFDX、TTEthernet等都将确定性呈现在网络特征
的重要方面“1。确定性可分为通信确定性和时
间确定性,通信确定性不保证传输响应的一致性,
而时间确定性能同时保证数据完整和响应的一致
性,完全控制时序抖动。
2.3“数据传辐特性需求
空间应用上使用以太网的主要目的是借助以
太网的灵活性满足载荷接人的方便性和保持一定
的高带宽和速率,同时在控制领域具有强实时性。
目前,我国航天器内有效载荷通信网络数据传输
特性有:@〇D循环周期的规律性,周期性信息(周期
性的上行控制指令和数据注人,周期性的下行数
字量遥测、工程参数、科学数据等)较多,而非周
期信息(随机的上下行数据、突发数据等)较少;
G大数据量的传输通常是短时传输,而且有具体
时间段;G@)控制通道的时间精确,可达到毫微秒
级,骨十网的时间精度一般在100us级可以满足
要求;(@骨干网络的规模和节点数在航天器设计
初始阶段就可以规划好,能够预知,网络负荷较为
平稳;(G通信协议遮循CCSDS要求,数据包大小
和长度比较固定。
到目前为止,我国航天器上有效载荷控制与
数据通信尚未大规模使用过以太网。国际空间站
采用了普通以太网来传输中速载荷数据,使用时
间触发以太网的猎户座飞船已经进行了试飞。国
外对时间触发协议研究较早,主要在航空和汽车
领域,并有相关出版物和标准“1。国内最近几年
才开始在航空界有学术研究,主要集中在同步理
论阶段,而在航天界还未开展对时间触发协议的
研究。
3“网络拓扑与协议栈设计
3.1网络抓扑
空间应用以太网的网络拓扑如图1所示,采
用双交换机冗余拓扑结构。通过时间触发以太网
交换机可以连接时间触发节点和普通以太网节
点,节点之间的信息传输相互兼容,并可传输标准
以太网和时间触发以太网两种数据。
3.2“协议栈
空间应用以太网的协议栈集成了标准以太网
协议(事件触发)和时间触发协议两种协议,协议
栈结构如图2所示:
1)协议栈中以太网中的数据分为实时数据
和普通数据两种,实时信道的优先级比标准以太
网信道的优先级要高。在链路层(MediaAccess
Control,MAC)之上增加实时调度层,以实时调度
普通数据和实时数据,两种数据在实时调度层采
用基于优先级的抢占式调度方式;
2)标准以太网数据采用事件触发,在实时通
信通道采用时间触发协议,实时通道的时钟同步
标用专门的协议控制帧(ProtocolControlFrame,
PCF) 01;
3)时间触发数据报文在预先定义的时刻进
行通信,在交换机确认没有时间触发数据报文时,
发送普通数据报文;
4)每个网络节点都按照通信配置表(Message
DescriptorList,MEDL)的要求,在规定的时刻开
始收发数据。通信配置表可保证每一个共享资源
都不相互冲穷;
普通数据报文时间触发数据报文
双线连接交换机,节点的一个线路若有故障,自动
切换到另一个线路连接。
3.3“数据流优先级
空间应用以太网提供3种通信业务:PCF、时
间触发通信、标准以太网通信,其中PCF又分为
冷启动恭(Cold-startframe,CS)、冷启动确认帧
( Cold-start Acknowledge frame, CA ) 、 集 成 帧
(Integrationframe,IN)。优先级从高到低依次为
协议控制帧(最高优先级)、时间触发通信(其
次)、标准以太网(最低)。
3.4网络同步过程
3.4.1“启动同步
节点的启动同步是从网络节点上电到加人同
步集群中的过程。在节点加电后,同步主机和压
缩主机通过CS帧和CA帧进行通信,执行同步操
作直到集群同步。我们把发送CS帧和CA帧的
过程称为容错握手过程。
3.4.2“IN帧同步
除启动时各节点通过发送CS帧和CA帧同
步外,在正常通信过程中,应由同步主机
(Synchronization Master,SM) 不 断 地 发 送 IN 帧 到
压缩主机(CompressionMaster,CM)来维持时间
同步。同步分为两步,见图3。第一步,同步主机
发送PCF帧到压缩主机。然后压缩主机计算这
些PCF帧的到达时间的平均值,发送一个新的
PCF帧作为反馈。第二步,压缩主机发送生成的
新协议控制烨给各同步主节点命同步客户端。之
后各节点进行各自的时钟校正。
3.5.1“帧传输时刻点
图 4 是时间触发传输帧人从一个发送节点经
过中间交换机到一个接收节点的过程。[仁,]
表 示 一个链路,“““表示在这个链路上传输的
帧户21。
Link[A,D]*-一一一一
图 4 时间触发帧的数据流中的相关时间点
Fig.4 Time point in data {low of a time-triggered frame
万帧传输迈程中的各个时间点如下:@〇分派
时间点(dispatch_pit),帧人的分派时间点是静态
定义的周期性中断,可触发一个恭的传输;G@)发送
时间点tsend_pit),在该时刻人帧的开始(Start-of-
Frame,SOF)定界符之后的第一个字符的第一位
的前沿通过通信链路被传输;@)接收时间点
(receive_pit),颌人的接收时间点是指接收帧的
第一位的接收时刻;团开始接收窗口时间点
(accept_pit),用于交换机检查作为时间触发传输
帧时间的正确性。
3.5.2“数据通信过程
时间触发协议要求网络中的每一个终端和交
换机都按照通信配置表的要求,在规定的时刻开
始收发数据。整个网络的通信配置表采用离线方
式生成,并保证每一个共享资源都不相互冲突。
在网络中每个终端在某一时刻最多只有一条消息
需要发送,不会出现多条消息竞争使用同一输出
.链路的情况。
图 5 中有3个节点通过交换机进行互联。节
点1和节点2分别发送时间触发消息到节点3。
节点1发送消息的周期为3ms,节点2发送消息
的周期为2ms,节点3接收到的数据序列如图5
所示。
a.m BB
3ms江期3ms周期3ms周期
4.1“基本参数
4.1.1“全局基准时间
全局基准时间是时间同步的基础和唯一依
据,采用统一时间格式,用两种参数来表示;颗粒
度(granularity)和跨度(horizon)。颗粒度表示两
个相邻的数字时钟片之间的间隔,也就是可以按
时间格式进行测量的最小时间间隔,跨度就是时
间环绕流逝的瞬间。时间格式是一个基于秒的
64位二进制数。
4.1.2“数据幄格式
以时间触发方式传输的帧仍采用标准以太网
的数据帧,在帧中增加了时间触发的内部标识和
域类型。时间触发数据以太网类型的值为
0x88d7,事件触发数据以太网类型的值
为 0x8800。
4.1.3“芸点定义
网络中存在三种节点,同步主机指网络中参与
IN帧同步计算的终端节点。压缩主机指网络中参
与压缩计算的交换机,而其他节点(可能是交换机
或终端节点)称作同步客户端(Synchronization
Client, SC),
4.1.4“节点的透明时钟
透明时钟就是从发送节点到接收节点传输的
昼积延时,时间以PS为单位,包括动态传输延迟、
静态传输延迟和线路延迟等。各节点采用透明时
钟的值存储在PCF帧的透明时钟域中。发送节
点、中继转发节点和接收节点,它们的透明时钟可
统一成式(1)计算,;为节点的编号:
pef_transparent_clock, =
pcft_transparent_clock; _1 + dynamic_relay_delay; +
其中,pcf_transparent_clock;为当前节点的透明
时 钟 , pef_transparent_ clock; _, 为 第 8 - 1 个 节 点 的
透明时钟值,dynamic_relay_delay;为节点;的动态
传送延迟,static_relay_delay;为节点5的静态传送
延迟,wire_delay:为节点5-1到节点5的链路
延迟。
4.1.5“网络最大传输延迟
最大传输延迟max_transmission_delay表示网
络中所有发送节点到接收节点间的最大传输时伊
FER, max _ transmission _delay 是 离 线 时 的 统 计
值,如式(2)所示,一个集群内的每个节点将使用
同样的值。
4.1.6“压缩算法延迟时间
压缩算法延迟时间为压缩主机在执行压缩算
法时的时间开销。计算公式见式(3)。
compression_master_delay =
calculation_overhead + dispatch_delay
其中,max_observation_window为最大观察窗口的
值。observation_window为压缩算法观察窗口,可
进行离线配置。丫为可容纳的故障同步主机数,
最大观测窗口的计算姗式(4)所示。
calculation_overhead为压缩算法的计算延
时,dispatch_delay为压缩主机发送帧的时延。
4.1.7PCF帧预定接收时间
压缩主机中的PCF恭预定接收时间“由式
(5)计算:
cm_scheduled_receive_pit =
sm_dispatch_pit + max_transmission_delay +
compression_master_delay
(5)
同步主机/同步客户端中的PCF帧预定接收
时间由式(6)计算。
smc_scheduled_receive_pit = ,
sm_dispatch_pit +2 x max_transmission_delay +
compression_master_delay
′ (6)
其中,sm_dispatch_pit为同步主机发送PCF的发
送时间,max_transmission_delay为最大传输延迟,
compression_master_delay 为 压 缩 算 法 延 迟 。
4.2“基本算法
4.2.1“时序保持
时序保持的主要目的是对接收到的数据恭进
行重新排序,以便和各帧的发送顺序保持一致,在
各类节点中均执行。receive_pit指接收节点物理
上接收到PCF的时间点,而permanence_pit指经
过消息时序保持算法后得到的保持时间点,压缩
算法采用的是permanence_pit而不是receive_pit,
因而需进行时序保持计算。
时序保持算法主要的计算过程为:〇接收节
点(压缩主机/同步客户端/同步主机)接收到
PCF,读取本地时钟值记为receive_pit,并启动消
息时序保持算法;G)读取PCF的透明时钟域得到
透明时钟值pcf_transparent_clock,即为PCF在网
.、络中传输的实际总延迟;@计算保持延迟
permanence_delay;(@ 计 算 保 持 时 间 点 permanence
_Plto
4.2.2“压缩
压缩是在CM中执行的算法,CM中收集到的
各PCF保持时间点之间的时间差可以真实代表
发送原PCF的SM本地时钟之间的时间差。压缩
算法根据在配置时间果内的各PCF的保持时间
点,计算出压缩时间点(cm_compressed_pit)。最
优压缩时间点反映了网络内各SM节点本地时钟
的平均值““CM根据最优压缩时间点向SM/SC
发送新的PCF,作为SM/SC同步时钟调整的基
准。在CM中,由最优压缩时间点和预计接收点
之差来校正CM的本地时钟。
压缩算法针对的恭类型是IN帧和标准集成
模式下的CA帧,对于CS峤和高度集成模式下的
CA帧则不压缩,参见表1。
表 1 压缩算法计算的帧类型口
Tab. 1 Frame type computed in compress algorithm
CS帧CA粥IN颉
标准集成同步主机“不压缩压缝压缩
高度集成同步主机“不压缩“不压缩压缩
压缩算法分为3个阶段。〇采集阶段:在
PCF被保持后,如果此时没有压缩算法处于采集
阶益,则开启新的压缩算法。此时压缩算法开肢
一个观测窗口(ObservationWindow,OW),如果
集群内所有节点都同步时,所有SM发送的集成
周期相同的各PCF保持点可以在第一个0W内
收集完全。G)计算阶段:采用容错平均算法去计
算压缩的时钟校正值compression_correction?!,
@延迟阶段:继计算阶段之后,根据延迟|
compression_correction的时间长度,得到压缩点
cm_compressed_pit,
4.2.3“时钟校正
同步主机/客户端以及压缩主机都执行时钟
校正算法,在接收窗口结束时,同步主机和同步客
户端选择在新成员变量pef_membership_new参数
中具有最高位数据的PCF作为每一个通信的链
路。在遇到多个PCF含有同样的pcf_membership
_new位数据时,选择的PCF就是在接收窗口内最
新的smc_permanence_pit时间点的那个,或者是
最靠近接收窗口结束的数据帧。那么,同步主机
和同步客户端的时钟校正可由预计PCF接收时
间点smc_scheduled_pit和该PCF所携带的参数
来计算。
压缩主机挑选所有能接收到PCF帧的信道
中最好的那个信道,假设在该信道上接收的PCF
恭经过压缩算法之后,选取max(cm_compressed__
pit)。′二T三^兰赞|言'…〕…-机〉_'夺1′′尝〈^′使用暂…罄`〕丨'′王^pcf_membership_
new中位设置最多的PCF以及在一系列pcf_
membership_new中最近的那个PCF,这里cm__
compressed_pit为压缩主机完成压缩时刻。同样,
压缩主机根据PCF预定接收时间点cm_scheduled
_receive_pit和该PCF携带的参数来计算时钟
校正。
根据计算出的时钟校正clock_corr值,压缩
主机、同步主机和同步客户端的本地时钟local_
corr校正见式(7)。
local_corr = local _corr + clock_corr (7)
5“实验|
采用基于组件的模块化网络仿真平司
( Objective Module Network Testbed in C++,
Omnet ++ ) 和 网 络 仿 真 框 架 ( Internet Framework ,
INET)进行网络仿真验证,INET提供了标准以太
网的协议模型“““,实验在此基础上设计了面向空
间应用的时间触发以太网的仿真协议模型,如图
6所示。
仿真模型在INET模型的MAC层增加了时
间触发调度的链路扩展层,用于调度普通数据和
时间触发数据,而交换机模型只需设计到链路层
即可,其余网络节点模型采用对等设计。
节点1交换机节点2
应用层
数据链路层
I匹
& 政 & Jers Es [Nets
图 6 仿真协议模型
Fig.6 Simulation protocol model
5.1同步性能仿真
建立含有7个标准集成度的同步主机、2个
交换机构成的中等规模网络,如图7所示。
网络的通信时间果设置为80ns,各节点和交换
机的时钟精度设置为80ns,PCF同步IN帧长度为
72Byte,各节点.交换机和链路的硬件延迟为0,集
群周期设为Ims。网络传输速率为100Mbps,仿真
时间设定为20min。仿真完成后,统计2个交换机
的同步操作网络占用率如图8所示。
(C96)一带宽占用率
同步操作带宽占用率较大的为交换机1的端
口4和交换机2的端口3,因为这2个端口是级联
端口,但仅为2.36%。可以看出同步操作占到交
换机的带宽比例很小,平均为0.98%。
在同步操作过程中,每个节点和交换机的处
理IN帧的延迟如图9、图10所示。可以看到,交
换机进行IN帧接收和发送的延迟均在5us~
25ps之间,压缩计算导致的延迟不超过20us。各
个节点发送IN帧不占延迟时间,而接收处理IN
帧延迟在20us~27us之间,各节点时钟同步延迟
不超过27hs。可以看到该网络可以满足空间以
太网的时间精度100s内的需求。
图 9 交换机接收各节点IN帧的延迟和发送IN帧的延迟
Fig. 9 Latency of IN frame switching in switch
(s)
图 10 “各个节点发送IN桢和接收IN帧的延迟
Fig. 10 Latency of IN frame switching in nodes
5.2网络性能仿真
建立以3个标准集成度的同步主机、1个交
换机构成的网络,如图11所示。
