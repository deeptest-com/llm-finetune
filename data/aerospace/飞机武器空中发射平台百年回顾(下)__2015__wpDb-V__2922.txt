飞机武器空中发射平台百年回顾(下)
热障 X-2飞机的试飞除证实惯性耦合现象外也得出很多”气动加热”的数据。当它的速度达到2.5马赫,机头的油漆就开始出现过热剥蚀现象。物体在大气中运动会受到空气冲击和磨擦产生高温是早已预料到的。理论上物体表面产生的驻点温度(即空气直接撞击物体表面,相对速度为0的那一点位置的温度)与飞行马赫数有关,也与当时大气温度有关。例如2.0马赫时驻点温度

飞机武器 物体表面 驻点温度 战斗机 飞行员 发动机 颤振 抖振 气动加热 飞行马赫数  

0引言
随着仿真技术的进步,单节点、单领域的仿真系统
已经很难满足当前大规模仿真的需求,多节点、多领域
的大规模仿真系统成为必然的发展趋势“1。大规模仿
真系统往往集成了多个不同领域的仿真分系统口。在
系统的分布交互模型开发过程中,领域专家(开发者)
需要学习相关分布交互建模知识后独立完成建模,或
者配合仿真人员进行相应分布交互接口的开发,实现
整个系统的互联互通。对于大规模仿真系统的开发而
言,这都将极大地制约系统的开发效率,造成人力、物
力的浪费。
在分布交互建模领域,高层体系结构(HighLevel
Architecture,HLA)是通用的仿真标准和规范““。但
是,将HLA应用于大规模仿真系统仍然存在联邦
mapping; code generation; development efficiency
(Federation)开发效率低下的问题。尽管各种辅助工
具(如想定编辑器、对象模型开发工具OMDT、代码生
成工具等)使联邦的开发更加规范、快速,但是具体的
联邦成员(Federate)开发和集成还需要大量的工作。
对于大规模仿真系统的开发而言,为了保证系统具有
广泛的兼容性和扩展性,需要一种面向领域的,并且易
用易维护的HLA建模方法。
本体的概念最初来自于哲学领域,20世纪90年代
被引用到计算机领域,特别是人工智能(ALI)和知识工程
研究中,用于知识表示和知识组织,其概念也随着不断
改变。其中,TomGruber的定义被引用的最多,“本体是
概念模型的明确的形式化规范说明“,Studer等总结为:
“本体是共享概念模型明确的形式化规范说明““。
由本体的定义可知,本体可以显式地表达领域知
识,并促进不同领域间概念的语义一致。以往的研究
中,已有学者关注到本体与分布式系统的结合:文献
[5]指出本体在建模仿真领域的潜在优势;文献[6]将
HLA仿真对象模型(SOM)和联邦对象模型(FOM)分
别用本体表示,并建立了SOM本体和FOM本体的映
射,促进丁新建HLA联邦时的模型重用;文献[7]提出
一种基于HLA的交互本体,用于描述HLA仿真过程
中需要交互元沥的语义;文献[8]也将本体技术用于
复杂产品的协同仿真过程中,实现仿真过程中模型的
语义一致性。
从上述研究可以看出,当前的研究主要集中在利
用本体解决HLA仿真中的模型间语义一致性问题,如
何利用本体技术提高HLA联邦开发效率方面的研究
较少。结合以往多方面研究,提出一种面向语义的分
布交互建模方法。利用领域知识建立领域本体,实现
领域本体到HLA对象模型的映射,并建立分布仿真交
互接口。
1面向语义的分布交互建模思想
面向语义的分布交互建模采用面向领域的理念,
将本体、语义映射“等概念引人到建模过程中,基于高
层体系结构HLA实现开发人员面向领域知识的仿真
系统开发。建模过程如图1所示。
节:本体构建、语义映射和代码生成。
1)本体构建:领域专家利用相关领域知识(领域
内相关概念以及概念间的相互关系),经过相应的本体
构建模块,将领域知识进行规范化的描述,形成领域
本体。
2)语义映射:得到领域本体后,一方面将领域本
体存人本体库内,本体库内保存着整个仿真系统所有
的领域本体,另一方面将领域本体经过语义映射模块
转换为HLA对象模型。
3)代码生成:利用相应的HLA代码技术生成
HLA/RTI代码,建立当前领域的分布交互接口,实现
各个仿真节点与其他分布交互接口的互联互通。
基于该方法的开发过程中,向用户屏蔽了HLA/
RTI的技术细节,建模过程完全由领域专家完成,不
需要仿真人员的参与,降低了使用难度,提高了开发
效率。
2“面向语义的分布交互建模方法
2.1“领域本体的构建
本体作为共享的概念模型的形式化规范说明,反
映了某一领域的概念以及概念之间的关系。在分布交
互建模领域,引人领域本体的概念,并东将其形式化定
义为一个五元组:0=<C,A,R,ILM>,HH,C是概
念集,指分布交互建模领域中概念、术语的集合;4表
示属性集,主要用来表现概念自身的特征;R是关系,
指领域中概念间的交互关系,主要包括父子关系、等价
关系等;1为实例集,是指属于某概念类的基本元素构
成的集合,即栋概念类所指的具体实体;是实例与概
念之间的映射关系集合,该映射集将每个实例对应到
其所属的概念下,如ie(C)表示5是概念C的实例,
概念之间通过各种关系相互关联在一起。
由上述定义可知,本体构建的目标都是捕获相关
领域的知识,提供对知识的共同理解,确定该领域内共
同认可的词汇,并给出这些词汇之间的相互关系。
目前,本体的构建过程并没有统一的标准,比较常
见的有:,MikeUshold的“骨架法“,Cruninger和Fox的“评
估 法 “ ( 又 称 TOVE) ,Bemaras 方 法 ,METHONTOLOGY 方
法,SENSUS方法等“,出于对各自学科领域以及具体
工程的不同考虑,本体的构造过程、侧重点和理论基础
有所不同,但本体建模的一般过程可归纳为本体捕获/
发现、本体描述/编辑/建模和本体评估(如图2所
示)。除了上述开发方法外,为了方便本体的构建,许
多组织或团体开发了多种本体建模工具,常用的有
Protegs、WebODE、OntoEdit、OILED 等 1。
分系统领域专家完成,直接札用上述任何一种方法或
者工具,都需要领域专家学习相关领域本体构建知识
或者熟悉相关本体编辑工具,这与提高系统开发效率
的需求相矛盾。鉴于此,设计了一种面向领域专家的
领域本体构建工具,为用户提供编辑环境,用于对系统
中涉及到的信息交互关系进行规范化描述,其输出结
果是系统领域本体。
为了规范领域本体构建过程,采用本体描述语言
(Web Ontology Language, OWL) 构 建 领 域 本 体 。0WL
能够被用于清晰地表达词汇表中的词条(term)的含
义以及这些词条之间的关系,而这种关系就是本体
(Ontology)丨。但是,0WL语言规定了特有的语法来构
建本体,直接札用0WL语言构建领域本体需要对其有
深入的了解。为了简化本体构建过程,降低领域本体构
建的难度,本体构建工具提供图形化的编辑环境,对系
统用户屏蒲本体描述语言的语法细节,同时通过特定的
人机交互设计规范领域本体的编辑过程。本体构建工
具软件结构主要包括图形化编辑模块、文件管理模块、
数据转化存储模块和本体语义词汇模块4部分。
1)文件管理模块:对用户在领域本体构建过程中
创建的文件进行有效的管理,提供文件的新建、复制、
删除、查找、分组管理等功能。倩鉴于模块采用图形化
的方式,展示文件的组织结构,并提供相应的菜单支持
对文件的各种编辑操作。
2)图形化编辑模块:为系统用户提供图形化的领
域本体编辑环境,支持领域本体构建过程中的词汇增
添、删除、编辑等功能。
3)数据转化存储模块:依据开发工具中的领域知
识揪述词汇与本体语言词汇之间的对应关系,将用户
在图形化编辑环境中录人的中间数据,经过转化后按
照本体语言描述规范进行存储,形成最终的领域本体。
4)本体语义词汇模块:存储了描述领域知识的语
义词汇与本体语义词汇之间的对应关系,辅助数据转
化存储模块完成数据转化功能。
通过这样的方式构建领域本体具有简便、直观的
特点,能够有效降低领域本体构建的难度,使领域专家
很容易建立领域本体。
2.2“语义映射实现方法
语义映射是实现源数据与目标数据转换的一种方
法“,语义映射过程如图3所示。
以识别的对象模型(FOM/SOM)的转换。语义映射部
分主要包含3个功能模块:本体知识解析模块、语义昭
射规则模块和HLA对象模型构建模块。
1)本体知识解析模块。
领域本体采用W3C制定的本体语言OWL描述系
统领域本体。0WL语言具有很强的表达能力,能够清
晰地表达词汇表中词汇的含义以及词汇之间的关系。
为了具备这种能力,0WL语言制定了严谨的语义表达
规范,本体知识解析模块的主要功胎是依据OWL语言
的语义规范,将领域本体中描述系统交互关系的词汇
以及词汇之间的关系提取出来。
2)语义映射规则模块。
本体知识解析模块提出的词汇以及词汇之间的关
系符司OWL语义描述规范,但与HLA/RTI表述规范
不相符合。语义映射规则模块的功能是建立OWL语
义描述规范与HLA/RTI语义描述规范之间的映射规
则,实现本体知识由OWL语义描述向HLA/RTI语义
描述的转化。
鉴于领域本体与FOM/SOM表达方式上的差异,
很难通过一种直接的方式实现它们之间的信息映射。
引人模式图(SchemaGraph)"的概念将领域本体与
FOM/SOM描述结构进行统一。模式图模型5C=(C,
P,R)。其中:C为概念;P为概念的数值类型属性集
合;命为概念间语义关系的集合。从而可以根据模式
图 中 C、P、R三种概念结构进一步对领域本体与FOM/
SOM成分进行分类映射。
从词义匹配度和上下文匹配度等各方面迹行分
析,可以得到领域本体模式图和HLA对象模型模式图
中C、P、R的映射关系,并形成信息眨射表。根据昨射
表 和 领域本体,最终得到符合FOM/SOM表述规范的
词汇(如图4所示)。
形成HLA对象模型。
HLA对象模型构建模块采用基于XML模板的方
式实现(如图5所示)。基于XML模板自动生成仿真
对象模型时,首先依据FOM/SOM表的格式规范制定
XML模板;然后用XML解析程序对模板中的标签进
行分析,对特定的标签做预定的操作一一将获取到的
词汇填充到模板的不同位置;填充完模板后,调用文档
输出程序,将模板的不同“标签对“中的内容以文档形
式输出,形成最终的FOM/SOM文件。
凡是可共享的功能或软件服务一般都可以通过设
计一个可共享的软件框架来实现。软件框架的优点在
于能够通过重用提供高层服务而屏蔽底层细节,从而
大大提高各类应用程序的开发效率,避免重复编写大
量相同的代码以及由此可能产生的大量错误。
HLA联邦成员开发过程中存在许多公共功能,这
些功能可以在一个通用的框架中实现,该框架能够提
供联邦成员与RTI之间的信息交互接口,尽量封装
RTI编程复杂性,并适当提供缺省功能。信息交互接
口的开发首先考虑封装对RTI函数的调用过程,实现
交互信息与RTI间的接口函数;其次是根据不同类型
的仿真确定仿真主流程;再者是根据成员公布定购对
象类属性和交互类参数的情况,将HLA对象模型中的
对象类、交互类以及路径空间等映射为软件代码,生成
与领域本体对应的软件框架。
面向领域的联邦成员代码框架生成过程如图6所
示。模板是依据RTI调用过程提取的共性框架结构;
FOM/SOM信息是对象模型开发模块生成的联邦成员
数据文件;领域本体由领域专家利用本体构建模块生
成,其中包含了联邦成员信息;时间管理策略、推进机
制用于确定成员的时间管理和推进方式。HLA联邦
信息通过匹配转换封装RTI接口函数,生成面向领域
的交互代码框架,以信息交互、时间管理和空间管理服
务的形式为模拟器软件提供支撑。
图 6 面向领域的分布交互代码框架生成
Fig.6 Distributed interactive code generation
3“实例分析
本文以“防空武器系统分布交互平台“为例对该
方法的应用进行具体说明。防空武器系统仿真分布交
互平台是针对防空旅武器装备模拟器互联互操作开发
的运行支撑平台。平台基于HLA/RTI开发,一般模拟
器开发人员难以掌握,而且后期维护较为复杂。针对
此问题,平台以现有的分布交互仿真标准为基础,利用
面向语义的分布交互建模思想开发了相应的工具提供
面向领域的对象建模功能,实现模拟器分布交互接口
开发的规范化、标准化。
防空旅武器系统联邦开发模式如图7所示,整个
系统联邦结构复杂。
器系统单元包括一个指挥车联邦和炮车联邦等,其中
指挥车联邦和炮车联邦又分为多个操作节点。按照传
统的分布交互建模方法,各节点的分布交互接口开发
过程需要领域专家配合仿真人员完成。而防空旅武命
系统联邦节点众多,这将耗费大量的人力、物力参与联
邹开发,并且不同的仿真人员开发的分布交互接口难
于规范,不利于联邦的集成和后期的维护。
利用分布交互平台提供的工具开发分布交互接口
的过程如图8所示,只需要一位系统用户(领域专家)
整理出系统的领域知识(整个系统的信息交互情况),
将这些信息按规定格式录人对象建模工具生成领域本
体,领域本体经过语义映射模块生成HLA联邦对象模
型(FOM);各节点普通用户(领域专家)同样整理装备
知识(自己节点的信息交互情况),录人信息交互建模
工具生成相应的应用本体(一类特殊的领域本体),经
过语义眨射模块生成相应的SOM文件。最后,平台利
用系统的FOM/SOM文件、领域本体等生成相应的分
布交互接口。
图 8 防空旅武器系统分布交互接口开发过程
Fig. 8 Distributed interactive interface development
process of air defense weapons systems
分布交互平台提供了一种面向领域专家的分布交
互建模功能,屏蔽HLA对象模型(FOM/SOM)的建模
绍节。各分系绕、各节点领域专家利用自身领域的领
域知识就可完成分布交互接口的构建,提高了系统的
开发效率。
4结束语
复杂系统仿真中,分布交互建模时需要耗费大量
的人力、物力参与,既浪费了资源,还不利于系统的集
成与调试。本文针对此问题,提出了面向语义的分布
交互建模方法,将本体、语义映射等技术引人HLA/
RTI建模过程之中,向领域专家屏蔽了HLA/RTI建模
的复杂性,使非仿真领域的人员也能很快开发自己的
交互接口,不仅提高了仿真系统的开发效率,而且实现
仿真分系统分布交互接口开发的规范化、标准化,为今
后大规模仿真系统的开发打下良好的基础。
